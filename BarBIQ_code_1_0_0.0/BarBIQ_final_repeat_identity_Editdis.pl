#! /usr/bin/env perl
##########################################################################################################
#####Description of this code#####
#This code remove RepSeq types with single substitution errors that might be generated by PCR amplification.
#Different thresholds are applied for different sampling replicates.
###########################################################################################################
#####how to run this code #####
##command##
#BarBIQ_final_repeat_identity_Editdis.pl inputfile
##explaination##
#inputfile: The outputfile from BarBIQ_final_repeat_no_junk_deletion.pl, which is named as _normalization in the end.
########################################################################################################## 
#####Install#####
## please install the perl Module Text::Levenshtein::XS before using this code.
############################################################################################################

#####code#####
use strict;
use warnings;
use Text::Levenshtein::XS qw/distance/;

my $inputfile = $ARGV[0];
my $outputfile = $ARGV[0]."_identity";
unlink $outputfile;
my $outputfile_clean= $ARGV[0]."_clean";
unlink $outputfile_clean;
my $threshold;
my $gi;
my @info;
my @data;
open(FILE, $inputfile) or die "cannot open input file '$inputfile' $!";
$gi=<FILE>;
chomp $gi;
my $title=$gi;
my $seq;
my $no;
@info=split(/\s+/,$gi);
for (my $i=0; $i<=$#info; $i++)
    {
      if ($info[$i] eq "Sequence") {$seq = $i;}
      if ($info[$i] eq "AverageCount") {$no = $i;}
    }
# my $seq=$#info-1;
# my $no=$#info;
my $repeats = $seq-1;
if($repeats ==1) {$threshold=0.01;
                  print "You only have one replicate, so the threshold shoud be 0.01\n";}
elsif($repeats ==2) {$threshold=0.003;
                  print "You have two replicates, so the threshold shoud be 0.003\n";}
elsif($repeats ==3) {$threshold=0.0025;
                  print "You have three replicates, so the threshold shoud be 0.0025\n";}
else{die "You have more than three repeats, so the threshold shoud be ???\n";}
while($gi=<FILE>)
    {
     chomp $gi;
     @info=split(/\s+/,$gi);
     push @data, [@info];
    }
close FILE;
# print "$#data\n";
# die;
my %ratio;
my %if;
my %delete;
open(OUTF, '>>', $outputfile) or die "cannot open input file '$outputfile' $!";
my $i;
my $j;
for ($i=0; $i<$#data; $i++)
    {
      for ($j=$i+1; $j<=$#data; $j++)
          {
           if($data[$i][$no]>=10 || $data[$j][$no] >=10)
            {
             my $editdis= distance ($data[$i][$seq], $data[$j][$seq]);
             if ($editdis<=1)
               {
                 my $ratio;
                 if($data[$i][$no]<$data[$j][$no])
                    {
                     $ratio = $data[$i][$no]/$data[$j][$no];
                     if (exists $ratio{$data[$i][$seq]} )
                           {
                             if($ratio{$data[$i][$seq]} > $ratio) { $ratio{$data[$i][$seq]} = $ratio; 
                                 $if{$data[$i][$seq]} = "$data[$i][0]\t$data[$i][$no]\t$data[$j][0]\t$data[$j][$no]\t$editdis\t$ratio\n";}
                           }
                    else{ $ratio{$data[$i][$seq]} = $ratio; 
                          $if{$data[$i][$seq]} = "$data[$i][0]\t$data[$i][$no]\t$data[$j][0]\t$data[$j][$no]\t$editdis\t$ratio\n";}
                    }
                else{
                     $ratio = $data[$j][$no]/$data[$i][$no];
                     if (exists $ratio{$data[$j][$seq]} )
                           { 
                             if($ratio{$data[$j][$seq]} > $ratio) { $ratio{$data[$j][$seq]} = $ratio;
                               $if{$data[$j][$seq]} = "$data[$j][0]\t$data[$j][$no]\t$data[$i][0]\t$data[$i][$no]\t$editdis\t$ratio\n";}
                           }
                    else{ $ratio{$data[$j][$seq]} = $ratio;
                          $if{$data[$j][$seq]} = "$data[$j][0]\t$data[$j][$no]\t$data[$i][0]\t$data[$i][$no]\t$editdis\t$ratio\n";}
                    }
               }
            }
           }
     }
foreach my $key (keys %ratio)
   {
     print OUTF ("$if{$key}");
     if ($ratio{$key} < $threshold)
         {
            $delete{$key}=$if{$key};
         }
   }
close OUTF;
open(OUTF, '>>', $outputfile_clean) or die "cannot open input file '$outputfile_clean' $!";
print OUTF ("$title\n");
for ($i=0; $i<=$#data; $i++)
  {
    if(!(exists $delete{$data[$i][$seq]})) 
     { 
       my $string = join("\t", @{$data[$i]}); 
       print OUTF ("$string\n");
     }
  }
close OUTF;

##end##

#####Author#####
#Jianshi Frank Jin

#####Version#####
#V1.001
#2018.07.27
